{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2f9cf1c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from catboost import CatBoostClassifier, Pool\n",
    "from sklearn.metrics import roc_auc_score\n",
    "import matplotlib.pyplot as plt\n",
    "import pyarrow.parquet as pq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "9a54cb94",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cd61cc27",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>slctn_nmbr</th>\n",
       "      <th>client_id</th>\n",
       "      <th>npo_account_id</th>\n",
       "      <th>npo_accnts_nmbr</th>\n",
       "      <th>pmnts_type</th>\n",
       "      <th>year</th>\n",
       "      <th>quarter</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>clnt_cprtn_time_d</th>\n",
       "      <th>...</th>\n",
       "      <th>lk</th>\n",
       "      <th>assignee_npo</th>\n",
       "      <th>assignee_ops</th>\n",
       "      <th>postal_code</th>\n",
       "      <th>region</th>\n",
       "      <th>citizen</th>\n",
       "      <th>fact_addrss</th>\n",
       "      <th>appl_mrkr</th>\n",
       "      <th>evry_qrtr_pmnt</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0xA095932790098744A2325A8D152C05C7</td>\n",
       "      <td>0xD4DBBAC6561929409BA45725A220613E</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017Q4</td>\n",
       "      <td>1</td>\n",
       "      <td>48</td>\n",
       "      <td>8091</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>446254.0</td>\n",
       "      <td>САМАРСКАЯ ОБЛ</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0xF75BAA20A603A2479005DEB80464336E</td>\n",
       "      <td>0x3DCFF11974B3D8458CE3569DE9E855D5</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2009</td>\n",
       "      <td>2009Q1</td>\n",
       "      <td>1</td>\n",
       "      <td>35</td>\n",
       "      <td>3303</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>399841.0</td>\n",
       "      <td>ЛИПЕЦКАЯ ОБЛ</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>0x0D18081E0556AF4F95A931FBA4159D52</td>\n",
       "      <td>0x9DADF88CB3407C4E89403315F640393E</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2010</td>\n",
       "      <td>2010Q1</td>\n",
       "      <td>1</td>\n",
       "      <td>47</td>\n",
       "      <td>1163</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>302038.0</td>\n",
       "      <td>ОРЛОВСКАЯ ОБЛ</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0x0AD72BC5475D9A4D83E12350A84F839D</td>\n",
       "      <td>0xF59C4E62F115684899EAE9B5D5ECF70F</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2005</td>\n",
       "      <td>2005Q4</td>\n",
       "      <td>-1</td>\n",
       "      <td>42</td>\n",
       "      <td>47</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>620034.0</td>\n",
       "      <td>СВЕРДЛОВСКАЯ ОБЛ</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0x73DF06339CC25840838408BAD52BE223</td>\n",
       "      <td>0x35BFFA05321C014B9FC29A189E89EDF0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2007</td>\n",
       "      <td>2007Q4</td>\n",
       "      <td>1</td>\n",
       "      <td>42</td>\n",
       "      <td>876</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>398035.0</td>\n",
       "      <td>ЛИПЕЦКАЯ ОБЛ</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 42 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   slctn_nmbr                           client_id  \\\n",
       "0           1  0xA095932790098744A2325A8D152C05C7   \n",
       "1           0  0xF75BAA20A603A2479005DEB80464336E   \n",
       "2           2  0x0D18081E0556AF4F95A931FBA4159D52   \n",
       "3           0  0x0AD72BC5475D9A4D83E12350A84F839D   \n",
       "4           0  0x73DF06339CC25840838408BAD52BE223   \n",
       "\n",
       "                       npo_account_id  npo_accnts_nmbr  pmnts_type  year  \\\n",
       "0  0xD4DBBAC6561929409BA45725A220613E                1           2  2017   \n",
       "1  0x3DCFF11974B3D8458CE3569DE9E855D5                2           2  2009   \n",
       "2  0x9DADF88CB3407C4E89403315F640393E                1           1  2010   \n",
       "3  0xF59C4E62F115684899EAE9B5D5ECF70F                1           1  2005   \n",
       "4  0x35BFFA05321C014B9FC29A189E89EDF0                2           2  2007   \n",
       "\n",
       "  quarter  gender  age  clnt_cprtn_time_d  ...  lk  assignee_npo  \\\n",
       "0  2017Q4       1   48               8091  ...  -1            -1   \n",
       "1  2009Q1       1   35               3303  ...  -1            -1   \n",
       "2  2010Q1       1   47               1163  ...  -1            -1   \n",
       "3  2005Q4      -1   42                 47  ...  -1            -1   \n",
       "4  2007Q4       1   42                876  ...  -1            -1   \n",
       "\n",
       "   assignee_ops  postal_code            region citizen fact_addrss  appl_mrkr  \\\n",
       "0            -1     446254.0     САМАРСКАЯ ОБЛ      -1          -1          0   \n",
       "1            -1     399841.0      ЛИПЕЦКАЯ ОБЛ      -1           1          0   \n",
       "2            -1     302038.0     ОРЛОВСКАЯ ОБЛ       1           1          0   \n",
       "3            -1     620034.0  СВЕРДЛОВСКАЯ ОБЛ       1           1          0   \n",
       "4            -1     398035.0      ЛИПЕЦКАЯ ОБЛ       1           1          0   \n",
       "\n",
       "   evry_qrtr_pmnt  churn  \n",
       "0               0      0  \n",
       "1               1      0  \n",
       "2               1      0  \n",
       "3               1      0  \n",
       "4               1      0  \n",
       "\n",
       "[5 rows x 42 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ea0d5030",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3589918, 42)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2c06ad5d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "slctn_nmbr                      0\n",
       "client_id                       0\n",
       "npo_account_id                  0\n",
       "npo_accnts_nmbr                 0\n",
       "pmnts_type                      0\n",
       "year                            0\n",
       "quarter                         0\n",
       "gender                          0\n",
       "age                             0\n",
       "clnt_cprtn_time_d               0\n",
       "actv_prd_d                      0\n",
       "lst_pmnt_rcnc_d                 0\n",
       "balance                         0\n",
       "oprtn_sum_per_qrtr              0\n",
       "oprtn_sum_per_year              0\n",
       "frst_pmnt_date              32441\n",
       "lst_pmnt_date_per_qrtr    1156410\n",
       "frst_pmnt                       0\n",
       "lst_pmnt                        0\n",
       "pmnts_sum                       0\n",
       "pmnts_nmbr                      0\n",
       "pmnts_sum_per_qrtr              0\n",
       "pmnts_sum_per_year              0\n",
       "pmnts_nmbr_per_qrtr             0\n",
       "pmnts_nmbr_per_year             0\n",
       "incm_sum                        0\n",
       "incm_per_qrtr                   0\n",
       "incm_per_year                   0\n",
       "mgd_accum_period                0\n",
       "mgd_payment_period              0\n",
       "phone_number                    0\n",
       "email                           0\n",
       "lk                              0\n",
       "assignee_npo                    0\n",
       "assignee_ops                    0\n",
       "postal_code                100157\n",
       "region                     131570\n",
       "citizen                         0\n",
       "fact_addrss                     0\n",
       "appl_mrkr                       0\n",
       "evry_qrtr_pmnt                  0\n",
       "churn                           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6e8465be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1947"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "246ebf05",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop_duplicates(inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f2c95df2",
   "metadata": {},
   "outputs": [],
   "source": [
    "column_types = df.dtypes\n",
    "\n",
    "# Отфильтровать столбцы с типом 'object', которые обычно являются категориальными\n",
    "categorical_columns = column_types[column_types == 'object'].index.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8a7b4162",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['client_id',\n",
       " 'npo_account_id',\n",
       " 'quarter',\n",
       " 'frst_pmnt_date',\n",
       " 'lst_pmnt_date_per_qrtr',\n",
       " 'region']"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "categorical_columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "c46a2895",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'client_id'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array(['0xA095932790098744A2325A8D152C05C7',\n",
       "       '0xF75BAA20A603A2479005DEB80464336E',\n",
       "       '0x0D18081E0556AF4F95A931FBA4159D52', ...,\n",
       "       '0xFAEF8B9104EA1F44972A461ED819B41F',\n",
       "       '0xA635D01777FFE9F411EE92629EDE5758',\n",
       "       '0xA635D01777FFE9F411EE89198C301878'], dtype=object)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "198977"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "'npo_account_id'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array(['0xD4DBBAC6561929409BA45725A220613E',\n",
       "       '0x3DCFF11974B3D8458CE3569DE9E855D5',\n",
       "       '0x9DADF88CB3407C4E89403315F640393E', ...,\n",
       "       '0x586E40A49367494CA8BF8F90D17F668F',\n",
       "       '0xA635D01777FFE9F411EE93593F55A8EF',\n",
       "       '0xA635D01777FFE9F411EE9D73DADDC2ED'], dtype=object)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "219741"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "'quarter'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array(['2017Q4', '2009Q1', '2010Q1', '2005Q4', '2007Q4', '2007Q3',\n",
       "       '2004Q4', '2020Q4', '2021Q1', '2018Q4', '2019Q4', '2009Q3',\n",
       "       '2012Q4', '2019Q1', '1994Q4', '2011Q4', '2016Q4', '2013Q4',\n",
       "       '2021Q2', '2006Q4', '1999Q2', '2022Q3', '2012Q1', '2004Q1',\n",
       "       '2013Q3', '2015Q4', '2020Q2', '2010Q2', '2013Q1', '2015Q2',\n",
       "       '2006Q1', '2022Q4', '2008Q3', '2016Q1', '2001Q4', '2014Q3',\n",
       "       '2010Q4', '2002Q4', '2015Q3', '2015Q1', '2021Q4', '2000Q4',\n",
       "       '2016Q3', '2018Q2', '2002Q3', '2017Q3', '2008Q4', '2017Q1',\n",
       "       '2005Q2', '2019Q3', '2014Q1', '1997Q3', '2022Q1', '2003Q2',\n",
       "       '2017Q2', '2014Q4', '2018Q3', '2011Q2', '2013Q2', '2007Q1',\n",
       "       '2000Q2', '2020Q3', '2021Q3', '2014Q2', '2018Q1', '1994Q2',\n",
       "       '2008Q2', '2019Q2', '2016Q2', '2022Q2', '2020Q1', '2006Q3',\n",
       "       '2002Q2', '2011Q1', '1998Q1', '2010Q3', '2003Q1', '2001Q3',\n",
       "       '1997Q4', '2009Q4', '1999Q1', '2005Q1', '2012Q2', '2011Q3',\n",
       "       '2009Q2', '2007Q2', '2012Q3', '2008Q1', '2001Q1', '2000Q3',\n",
       "       '1999Q4', '2000Q1', '1993Q4', '2002Q1', '2001Q2', '2006Q2',\n",
       "       '1997Q1', '2005Q3', '2003Q3', '1997Q2', '1996Q2', '1994Q3',\n",
       "       '2004Q2', '1994Q1', '1999Q3', '1996Q1', '1996Q4', '1998Q3',\n",
       "       '2004Q3', '1995Q4', '1998Q2', '1998Q4', '1996Q3', '2003Q4',\n",
       "       '1993Q3', '1993Q2', '1995Q1', '1995Q2', '1995Q3', '2023Q1'],\n",
       "      dtype=object)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "120"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "'frst_pmnt_date'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array(['1999-07-02', '2004-12-31', '2007-02-20', ..., '2022-11-05',\n",
       "       '2022-02-26', '2022-09-30'], dtype=object)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "5400"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "'lst_pmnt_date_per_qrtr'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array([nan, '2009-03-11', '2010-03-17', ..., '2015-11-25', '1996-05-16',\n",
       "       '1994-04-02'], dtype=object)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "6425"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "'region'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array(['САМАРСКАЯ ОБЛ', 'ЛИПЕЦКАЯ ОБЛ', 'ОРЛОВСКАЯ ОБЛ',\n",
       "       'СВЕРДЛОВСКАЯ ОБЛ', 'НИЖЕГОРОДСКАЯ ОБЛ', 'КРАСНОЯРСКИЙ КРАЙ',\n",
       "       'УДМУРТСКАЯ РЕСП', 'МОСКВА Г', 'ВОЛОГОДСКАЯ ОБЛ', 'ИРКУТСКАЯ ОБЛ',\n",
       "       'ТУЛЬСКАЯ ОБЛ', 'НОВГОРОДСКАЯ ОБЛ', 'ЛЕНИНГРАДСКАЯ ОБЛ',\n",
       "       'ОРЕНБУРГСКАЯ ОБЛ', 'АРХАНГЕЛЬСКАЯ ОБЛ', 'ЧЕЛЯБИНСКАЯ ОБЛ',\n",
       "       'САХАЛИНСКАЯ ОБЛ', 'КРАСНОДАРСКИЙ КРАЙ',\n",
       "       'ХАНТЫ-МАНСИЙСКИЙ АВТОНОМНЫЙ ОКРУГ - ЮГРА АО', 'МАРИЙ ЭЛ РЕСП',\n",
       "       'ЧЕЧЕНСКАЯ РЕСП', nan, 'ХАНТЫ-МАНСИЙСКИЙ-ЮГРА АО',\n",
       "       'САНКТ-ПЕТЕРБУРГ Г', 'БАШКОРТОСТАН РЕСП', 'БЕЛГОРОДСКАЯ ОБЛ',\n",
       "       'УЛЬЯНОВСКАЯ ОБЛ', 'ВОРОНЕЖСКАЯ ОБЛ', 'САРАТОВСКАЯ ОБЛ',\n",
       "       'СЕВЕРНАЯ ОСЕТИЯ - АЛАНИЯ РЕСП', 'МОСКОВСКАЯ ОБЛ', 'КАРЕЛИЯ',\n",
       "       'ХАБАРОВСКИЙ КРАЙ', 'КУГАРЧИНСКИЙ', 'АЛТАЙСКИЙ КРАЙ',\n",
       "       'КУРСКАЯ ОБЛ', 'ТЮМЕНСКАЯ ОБЛ', 'ТОМСКАЯ ОБЛ', 'ПРИМОРСКИЙ КРАЙ',\n",
       "       'ВОЛГОГРАДСКАЯ ОБЛ', 'ЯРОСЛАВСКАЯ ОБЛ', 'КОМИ РЕСП',\n",
       "       'КАЛМЫКИЯ РЕСП', 'АМУРСКАЯ ОБЛ', 'ОМСКАЯ ОБЛ', 'ВЛАДИМИРСКАЯ ОБЛ',\n",
       "       'КАРЕЛИЯ РЕСП', 'ПСКОВСКАЯ ОБЛ', 'ТВЕРСКАЯ ОБЛ', 'СМОЛЕНСКАЯ ОБЛ',\n",
       "       'БРЯНСКАЯ ОБЛ', 'ХАНТЫ-МАНСИЙСКИЙ АО', 'ДАГЕСТАН РЕСП',\n",
       "       'ЯМАЛО-НЕНЕЦКИЙ АО', 'РЯЗАНСКАЯ ОБЛ', 'ПЕРМСКИЙ КРАЙ',\n",
       "       'БАШКОРТОСТАН', 'КЕМЕРОВСКАЯ ОБЛАСТЬ - КУЗБАСС',\n",
       "       'КАЛИНИНГРАДСКАЯ ОБЛ', 'РОСТОВСКАЯ ОБЛ',\n",
       "       'ЧУВАШСКАЯ РЕСПУБЛИКА - ЧУВАШИЯ', 'ЕВРЕЙСКАЯ АОБЛ',\n",
       "       'ТАМБОВСКАЯ ОБЛ', 'АСТРАХАНСКАЯ ОБЛ', 'КИРОВСКАЯ ОБЛ',\n",
       "       'КАЛУЖСКАЯ ОБЛ', 'МУРМАНСКАЯ ОБЛ', 'СТАВРОПОЛЬСКИЙ КРАЙ',\n",
       "       'НОВОСИБИРСКАЯ ОБЛ', 'ПЕНЗЕНСКАЯ ОБЛ', 'КУРГАНСКАЯ ОБЛ',\n",
       "       'АРХАНГЕЛЬСКИЙ', 'ИШИМБАЙСКИЙ Р-Н', 'ТУЙМАЗИНСКИЙ',\n",
       "       'МОРДОВИЯ РЕСП', 'ТАТАРСТАН РЕСП', 'МАГАДАНСКАЯ ОБЛ',\n",
       "       'ИШИМБАЙСКИЙ', 'КАМЧАТСКИЙ КРАЙ', 'ДУВАНСКИЙ', 'САМАРСКАЯ',\n",
       "       'КОСТРОМСКАЯ ОБЛ', 'ХАКАСИЯ РЕСП', 'ИВАНОВСКАЯ ОБЛ',\n",
       "       'КЕМЕРОВСКАЯ ОБЛАСТЬ - КУЗБАСС ОБЛ', 'БАЙМАКСКИЙ',\n",
       "       'БАШКОРТОСТАН РЕСП.', 'ИВАНО-ФРАНКОВСКАЯ', 'ИРКУТСКАЯ',\n",
       "       'КРАСНОКАМСКИЙ', 'ХАНТЫ-МАНСИЙСКИЙ АВТОНОМНЫЙ ОКРУГ - ЮГРА',\n",
       "       'ЧЕЛЯБИНСКАЯ', 'УФИМСКИЙ', 'КАБАРДИНО-БАЛКАРСКАЯ РЕСП',\n",
       "       'АДЫГЕЯ РЕСП', 'ЗАБАЙКАЛЬСКИЙ КРАЙ', 'ЯНАУЛЬСКИЙ',\n",
       "       'КАРАЧАЕВО-ЧЕРКЕССКАЯ РЕСП', 'БУРЯТИЯ РЕСП',\n",
       "       'ХАНТЫ-МАНСИЙСКИЙ АВТОНОМНЫЙ ОКРУГ АО', 'ОРЕНБУРГСКАЯ',\n",
       "       'ДЮРТЮЛИНСКИЙ', 'ОБЪЕДИНЕННЫЕ АРАБСКИЕ ЭМИРАТЫ', 'КЕМЕРОВСКАЯ ОБЛ',\n",
       "       'СЕРГИЕВСКИЙ', 'МИШКИНСКИЙ', 'ТУЙМАЗИНСКИЙ Р-Н', 'УЗБЕКИСТАН',\n",
       "       'ХАНТЫ-МАНСИЙСКИЙ АВТОНОМНЫЙ ОКРУГ - ЮГРА АО.', 'БАКАЛИНСКИЙ',\n",
       "       'ЯМАЛО-НЕНЕЦКИЙ АВТОНОМНЫЙ ОКРУГ', 'АЛТАЙ РЕСП',\n",
       "       'ЯМАЛО-НЕНЕЦКИЙ АО.', 'КАЗАХСТАН', 'СЕВЕРНАЯ ОСЕТИЯ - АЛАНИЯ',\n",
       "       'ЯНАУЛЬСКИЙ Р-Н', 'ГОМЕЛЬСКАЯ ОБЛ', 'КУШНАРЕНКОВСКИЙ',\n",
       "       'СЕВАСТОПОЛЬ Г', 'ИНГУШЕТИЯ РЕСП', 'САХА /ЯКУТИЯ/ РЕСП',\n",
       "       'КРАСНОУФИМСКИЙ', 'КРАСНОЯРСКИЙ', 'УФИМСКИЙ Р-Н', 'ИСКИТИМСКИЙ',\n",
       "       'ДЮРТЮЛИНСКИЙ Р-Н', 'УКРАИНА', 'БЕЛГОРОДСКАЯ', 'КРАСНОДАРСКИЙ',\n",
       "       'СТЕРЛИТАМАКСКИЙ', 'РЯЗАНСКАЯ ОБЛ.', 'БЕЛАРУСЬ', 'МЕЛЕУЗОВСКИЙ',\n",
       "       'БУРАЕВСКИЙ', 'ИРКУТСКАЯ ОБЛ.', 'РЯЗАНСКАЯ', 'УДМУРТСКАЯ',\n",
       "       'ТАТАРСТАН', 'ОРЛОВСКАЯ ОБЛ.', 'БЕЛЕБЕЕВСКИЙ', 'БЕЗЕНЧУКСКИЙ',\n",
       "       'КАЗАХСТАН, ВОСТОЧНО-КАЗАХСТАНСКАЯ ОБЛ', 'ЯМАЛО-НЕНЕЦКИЙ',\n",
       "       'ИГЛИНСКИЙ', 'ХАБАРОВСКИЙ', 'САМАРСКАЯ ОБЛ.',\n",
       "       'БЕЛАРУСЬ, ГОМЕЛЬСКАЯ ОБЛ', 'КАЯКЕНТСКИЙ', 'КРАСНОЯРСКИЙ КРАЙ.',\n",
       "       'КРЫМ РЕСП', 'МОГИЛЕВСКАЯ ОБЛАСТЬ', 'ОХИНСКИЙ', 'ТЮМЕНСКАЯ',\n",
       "       'ЛИПЕЦКАЯ', 'ОРЕНБУРГСКАЯ ОБЛ.', 'КАРМАСКАЛИНСКИЙ Р-Н',\n",
       "       'МОГИЛЁВСКАЯ ОБЛАСТЬ', 'КРАСНОДАРСКИЙ КРАЙ.', 'БЕЛЕБЕЕВСКИЙ Р-Н',\n",
       "       'КАРАИДЕЛЬСКИЙ', 'ЗИАНЧУРИНСКИЙ', 'ПЕРМСКИЙ', 'СЛАВЯНСКИЙ',\n",
       "       'ЧЕЧЕНСКАЯ', 'ГРОЗНЕНСКИЙ', 'ВАСИЛЕОСТРОВСКИЙ', 'ИГЛИНСКИЙ Р-Н',\n",
       "       'СЕЛЕНГИНСКИЙ', 'ЧИШМИНСКИЙ', 'ЕРМЕКЕЕВСКИЙ', 'КИГИНСКИЙ',\n",
       "       'НЕФТЕЮГАНСКИЙ', 'ЧЕЧЕНСКАЯ РЕСП.', 'НЕНЕЦКИЙ АО', 'ПЕРМСКАЯ ОБЛ',\n",
       "       'БЛАГОВЕЩЕНСКИЙ', 'ОКТЯБРЬСКИЙ', 'СОСЕНСКОЕ П', 'ТАТЫШЛИНСКИЙ',\n",
       "       'ТЫВА РЕСП', 'ДОНЕЦКАЯ НАРОДНАЯ РЕСП', 'КАЛТАСИНСКИЙ',\n",
       "       'БЕЛОРЕЦКИЙ', 'ТЫМОВСКИЙ РАЙОН', 'ШАРАНСКИЙ', 'БУЗДЯКСКИЙ',\n",
       "       'ТАТАРСТАН РЕСП.', 'ЛОСИНООСТРОВСКИЙ', 'БИРСКИЙ', 'АДЫГЕЯ РЕСП.',\n",
       "       'МОСКОВСКАЯ', 'КАЛИНИНСКИЙ', 'КОМИ', 'ЗЛЫНКОВСКИЙ',\n",
       "       'ОКРУГ Г. МОСКВЫ', 'ГИАГИНСКИЙ', 'ПУРОВСКИЙ', 'ГАФУРИЙСКИЙ',\n",
       "       'ЛЕНИНГРАДСКАЯ', 'АЛЬШЕЕВСКИЙ Р-Н', 'ИЛИШЕВСКИЙ', 'РОСТОВСКАЯ',\n",
       "       'МОСКВА', 'АБХАЗИЯ', 'АУРГАЗИНСКИЙ', 'ЛИТВА', 'НЕВЕРКИНСКИЙ',\n",
       "       'БИЖБУЛЯКСКИЙ Р-Н', 'НИЖНЕТАВДИНСКИЙ', 'КРАСНОКАМСКИЙ Р-Н',\n",
       "       'ТАХТАМУКАЙСКИЙ', 'УДМУРТСКАЯ РЕСП.', 'ТАТЫШЛИНСКИЙ Р-Н',\n",
       "       'НЕФТЕГОРСКИЙ', 'БЛАГОВАРСКИЙ', 'НЕФТЕЮГАНСКИЙ Р-Н', 'МОЛДАВИЯ',\n",
       "       'МОСКВА Г.', 'БЕЛАРУСЬ РЕСП.', 'КИНЕЛЬСКИЙ', 'КАЛТАСИНСКИЙ Р-Н',\n",
       "       'МИЯКИНСКИЙ', 'КАНАДА', 'САЛАВАТСКИЙ', 'НУРИМАНОВСКИЙ',\n",
       "       'ИШИМБАЙИСКИЙ', 'ПЕРМСКИЙ КРАЙ.', 'САХАЛИНСКАЯ', 'КАРМАСКАЛИНСКИЙ',\n",
       "       'АЗНАКАЕВСКИЙ', 'САРАТОВСКАЯ', 'СОВЕТСКИЙ', 'РЕЧИЦКИЙ',\n",
       "       'ЧУВАШСКАЯ РЕСП', 'ТЕРСКИЙ', 'МЕЛЕУЗОВСКИЙ Р-Н',\n",
       "       'КРАСНОГВАРДЕЙСКИЙ', 'МАЛГОБЕКСКИЙ', 'КИРОВСКАЯ', 'НОГЛИКСКИЙ',\n",
       "       'АЛТАЙСКИЙ', 'КРАСНОСЕЛЬКУПСКИЙ', 'ОМСКАЯ ОБЛ.', 'АЛЬШЕЕВСКИЙ',\n",
       "       'БИЖБУЛЯКСКИЙ', 'ИЛИШЕВСКИЙ Р-Н', 'УЧАЛИНСКИЙ', 'СТАВРОПОЛЬСКИЙ',\n",
       "       'ЧЕКМАГУШЕВСКИЙ', 'МЕЧЕТЛИНСКИЙ', 'АРХАНГЕЛЬСКАЯ',\n",
       "       'БЕЛАРУСЬ, МИНСКАЯ ОБЛ', 'СТЕРЛИБАШЕВСКИЙ Р-Н', 'ТАМБОВСКАЯ',\n",
       "       'ЛУГАНСКАЯ', 'МАЙКОВСКИЙ', 'ЯМАЛО-НЕНЦКИЙ АО', 'КОМИ РЕСП.',\n",
       "       'БЕЛОЗЕРСКИЙ', 'КИРОВСКИЙ', 'ПРИМОРСКИЙ', 'САНКТ-ПЕТЕРБУРГ',\n",
       "       'ТАРБАГАТАЙСКИЙ', 'СВЕРДЛОВСКАЯ', 'ДЕМСКИЙ', 'ПОХВИСТНЕВСКИЙ',\n",
       "       'ХАНТЫ-МАНСИЙСКИЙ АВТОНОМНЫЙ ОКРУГ', 'ХАКАСИЯ РЕСП.',\n",
       "       'ЕРМЕКЕЕВСКИЙ РАЙОН', 'КРАСНОПАХОРСКОЕ', 'НАДВОРНЯНСКИЙ',\n",
       "       'ТАРАСОВСКИЙ', 'АУРГАЗИНСКИЙ Р-Н', 'ЛУГАНСКАЯ НАРОДНАЯ РЕСП.',\n",
       "       'СУЗЕМСКИЙ', 'КУЮРГАЗИНСКИЙ', 'СВЕТЛОГОРСКИЙ', 'ТЮМЕНСКАЯ ОБЛ.',\n",
       "       'СОСЕНСКОЕ', 'ДОЛИНСКИЙ', 'МОСКОВСКИЙ П', 'НИЖНЕОМСКИЙ',\n",
       "       'КИНЕЛЬ - ЧЕРКАССКИЙ', 'НИЖЕГОРОДСКАЯ ОБЛ.', 'МИЯКИНСКИЙ Р-Н',\n",
       "       'СЫКТЫВДИНСКИЙ Р-Н', 'ДАВЛЕКАНОВСКИЙ', 'ЧУКОТСКИЙ АО',\n",
       "       'ВНУКОВСКОЕ П', 'БАРЫШСКИЙ', 'ЦЕНТРАЛЬНЫЙ ОКРУГ',\n",
       "       'УЛЬЯНОВСКАЯ ОБЛ.', 'АРХАНГЕЛЬСКАЯ ОБЛ.', 'КАРАЧАЕВСКИЙ',\n",
       "       'ПРИМОРСКИЙ Р-Н', 'ПОСЕЛЕНИЕ ВНУКОВСКОЕ', 'САРАПУЛЬСКИЙ',\n",
       "       'ВОЛГОГРАДСКАЯ', 'ОРШАНСКИЙ', 'ГОМЕЛЬСКИЙ', 'ОМСКАЯ', 'КУРГАНСКАЯ',\n",
       "       'СОЛИГОРСКИЙ', 'ПЕЧАТНИКИ', 'ТОМСКАЯ', 'ШАРЫПОВСКИЙ',\n",
       "       'БЕЛОКАТАЙСКИЙ', 'ХАКАСИЯ', 'ЗИАНЧУРИНСКИЙ Р-Н',\n",
       "       'ВОЛГОГРАДСКАЯ ОБЛ.', 'ГОМЕЛЬСКАЯ ОБЛАСТЬ', 'КУРГАНСКАЯ ОБЛ.',\n",
       "       'ЛЕНИНСКИЙ', 'ГЕРМАНИЯ', '-', 'КАБАНСКИЙ',\n",
       "       'ЧУВАШСКАЯ РЕСПУБЛИКА -', 'РУЗСКИЙ ГОРОДСКОЙ ОКРУГ', 'УЛЬЯНОВСКАЯ',\n",
       "       'СОЕДИНЕННОЕ КОРОЛЕВСТВО', 'ХАБАРОВСКИЙ КРАЙ.',\n",
       "       'СТАВРОПОЛЬСКИЙ КРАЙ.', 'ОБЛУЧЕНСКИЙ', 'БАКСАНСКИЙ',\n",
       "       'БЕЛОРЕЦКИЙ Р-Н', 'ЖИЛОБИНСКИЙ', 'ИВАНО-ФРАНКОВСКАЯ ОБЛ',\n",
       "       'САМБОРСКИЙ', 'ТОМСКАЯ ОБЛ.', 'ПРИМОРСКИЙ КРАЙ.', 'Г МОСКВА',\n",
       "       'НОВО-ОДЕССКИЙ', 'БРЯНСКАЯ ОБЛ.', 'БАЛТАЧЕВСКИЙ', 'НОВООСКОЛЬСКИЙ',\n",
       "       'ЛЕНИНОГОРСКИЙ', 'ПЕНЗЕНСКАЯ', 'КОТЛАССКИЙ', 'МОЛОДЕЧНЕНСКИЙ',\n",
       "       'АКТАНЫШСКИЙ', 'СЕВЕРНАЯ ОСЕТИЯ-АЛАНИЯ РЕСП', 'КУШНАРЕВСКИЙ',\n",
       "       'КРАСНОСЕЛЬСКИЙ', 'КОРОЧАНСКИЙ', 'БЕЛАРУСЬ РЕСП', 'СОСНОГОРСКИЙ',\n",
       "       'МИНСКАЯ ОБЛАСТЬ', '77', 'АЛТАЙСКИЙ КРАЙ.', 'ФИЛИ-ДАВЫДКОВО',\n",
       "       'ПОВОРИНСКИЙ', 'ПОСЕЛЕНИЕ КИЕВСКИЙ',\n",
       "       'УКРАИНА, ИВАНО-ФРАНКОВСКАЯ ОБЛ.', 'ТУАПСИНСКИЙ', 'АБЗЕЛИЛОВСКИЙ',\n",
       "       'КУШНАРЕНКОВСКИЙ Р-Н', 'ПРОХЛАДНЕНСКИЙ', 'ИЖЕМСКИЙ', 'ПЕТУХОВСКИЙ',\n",
       "       'РОССОШАНСКИЙ Р-Н', 'КАРАЧАЕВО-ЧЕРКЕССКАЯ', 'ЗАБАЙКАЛЬСКИЙ',\n",
       "       'КАМЫШЛОВСКИЙ', 'УСТЬ-ОРДЫНСКИЙ БУРЯТСКИЙ АО', 'КОТЛОВКА',\n",
       "       'РЕСП БАШКОРТОСТАН', 'МАГАРАМКЕНТСКИЙ', 'МАРИЙ ЭЛ',\n",
       "       'КИРОВО-ЧЕПЕЦКИЙ', 'ШЕЛКОВСКОЙ', 'ДОНЕЦКАЯ НАРОДНАЯ РЕСП.',\n",
       "       'КУМЕНСКИЙ', 'ДАГЕСТАН', 'ПУШКИНСКИЙ', 'ЛЮБИНСКИЙ',\n",
       "       'ЛИПЕЦКАЯ ОБЛ.', 'БРЕСТСКИЙ', 'ИГРИНСКИЙ', 'ВОРОНЕЖСКАЯ',\n",
       "       'ЛОГОЙСКИЙ', 'НОВОСИБИРСКАЯ', 'МОСРЕНТГЕН П', 'ХАЙБУЛЛИНСКИЙ',\n",
       "       'КИНЕЛЬ-ЧЕРКАССКИЙ', 'МОСКОВСКАЯ ОБЛ.', 'ДАВЛЕКАНОВСКИЙ Р-Н',\n",
       "       'САРАТОВСКАЯ ОБЛ.', 'КУЗНЕЦКИЙ', 'ИНГУШЕТИЯ',\n",
       "       'ЧУВАШСКАЯ РЕСПУБЛИКА ЧУВАШИЯ', 'БУДА -КОШЕЛЕВСКИЙ', 'АСКИНСКИЙ',\n",
       "       'ПРИЛУЗСКИЙ', 'БЕССОНОВСКИЙ', 'НОВОСИБИРСКАЯ ОБЛ.',\n",
       "       'ФЕДОРОВСКИЙ Р-Н', 'ВЫБОРГСКИЙ', 'СВЕРДЛОВСКАЯ ОБЛ.',\n",
       "       'Г САНКТ-ПЕТЕРБУРГ', 'САХА (ЯКУТИЯ) РЕСП', '2 МКР',\n",
       "       'ЧИШМИНСКИЙ Р-Н', 'ТЕРЕНЬГУЛЬСКИЙ', 'ИСИКУЛЬСКИЙ',\n",
       "       'ХАНТЫ-МАНСИЙСКИЙ', 'РЕСП ТАТАРСТАН', 'ОЛЬХОВСКИЙ', 'ПСКОВСКАЯ',\n",
       "       'НОВОТОРЪЯЛЬСКИЙ', 'ШУМИХИНСКИЙ', 'ОРЛОВСКИЙ', 'ВЕРХОВИНСКИЙ',\n",
       "       'БУРЗЯНСКИЙ', 'СТЕРЛИБАШЕВСКИЙ', 'КРАСНОЧЕТАЙСКИЙ',\n",
       "       'БРЕСТСКАЯ ОБЛ', 'ВОСКРЕСЕНСКОЕ П',\n",
       "       'ХАНТЫ-МАНСИЙСКИЙ АВТОНОМНЫЙ ОКРУГ-ЮГРА АО', 'АНИВСКИЙ',\n",
       "       'КАМЧАТСКАЯ ОБЛ', 'КНЯЖПОГОСТСКИЙ', 'ПЕНЗЕНСКАЯ ОБЛ.',\n",
       "       'ЧЕЛЯБИНСКАЯ ОБЛ.', 'ЖУКОВСКИЙ', 'ВОЛОГОДСКАЯ', 'П.ВНУКОВСКОЕ',\n",
       "       'БРЯНСКАЯ', 'КРЫМ', 'АВСТРИЯ', 'НОВОЛАКСКИЙ', 'РЕСП ХАКАСИЯ',\n",
       "       'ЧЕРНУШИНСКИЙ', 'РЕЧИНСКИЙ', 'РЕСП МАРИЙ ЭЛ', 'КРАСНИНСКИЙ',\n",
       "       'АШИНСКИЙ', 'КЕМЕРОВСКАЯ ОБЛАСТЬ - КУЗБАСС.', 'ТАРСКИЙ',\n",
       "       'КИРОВСКАЯ ОБЛ.', 'КАЛИНИНГРАДСКАЯ',\n",
       "       'РЕСП СЕВЕРНАЯ ОСЕТИЯ - АЛАНИЯ', 'ЛЕНИНГРАДСКАЯ ОБЛ.', 'ТОЦКИЙ',\n",
       "       'ПЕЧОРСКИЙ', 'ЯМАЛО-НЕНЕЦКИЙ А.ОКР.', 'ДЮРТЮЛИНСКИЙ РАЙОН',\n",
       "       'ЗАБАЙКАЛЬСКИЙ КРАЙ.', 'ИСИЛЬКУЛЬСКИЙ', 'БЕЛГОРОДСКИЙ'],\n",
       "      dtype=object)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "448"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for i in categorical_columns:\n",
    "    display(i)\n",
    "    display(df[i].unique())\n",
    "    display(df[i].nunique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "86ab051f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.drop(['client_id', 'npo_account_id'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "57b0d31c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# df['frst_pmnt_date'] = [pd.to_datetime(date, format='%Y-%m-%d').timestamp() for date in df['frst_pmnt_date']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "109b75bd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# converted_data1 = pd.to_datetime(df['frst_pmnt_date'])\n",
    "# converted_data2 = pd.to_datetime(df['lst_pmnt_date_per_qrtr'])\n",
    "\n",
    "# numeric_data1 = [date.timestamp() for date in converted_data1]\n",
    "# numeric_data2 = [date.timestamp() for date in converted_data2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "f50a30d9",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "14b412e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['region'] = LabelEncoder().fit_transform(df['region'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "71da631d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['quarters'] = [int(date[-1]) for date in df['quarter']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "277405bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.drop(['quarter'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "6b66e8bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.drop(['region', 'frst_pmnt_date', 'lst_pmnt_date_per_qrtr'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f3de94da",
   "metadata": {},
   "outputs": [],
   "source": [
    "best_pipe.fit(X_train, y_train)\n",
    "y_pred_best = best_pipe.predict(X_test)\n",
    "mean_absolute_percentage_error(y_test, y_pred_best)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "59181ada",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0:\tlearn: 0.7753851\ttotal: 250ms\tremaining: 2m 4s\n",
      "1:\tlearn: 0.7670957\ttotal: 509ms\tremaining: 2m 6s\n",
      "2:\tlearn: 0.7720927\ttotal: 740ms\tremaining: 2m 2s\n",
      "3:\tlearn: 0.7781418\ttotal: 967ms\tremaining: 1m 59s\n",
      "4:\tlearn: 0.7790295\ttotal: 1.2s\tremaining: 1m 58s\n",
      "5:\tlearn: 0.7804328\ttotal: 1.43s\tremaining: 1m 57s\n",
      "6:\tlearn: 0.7808582\ttotal: 1.65s\tremaining: 1m 56s\n",
      "7:\tlearn: 0.7923087\ttotal: 1.87s\tremaining: 1m 54s\n",
      "8:\tlearn: 0.7939195\ttotal: 2.08s\tremaining: 1m 53s\n",
      "9:\tlearn: 0.7977752\ttotal: 2.3s\tremaining: 1m 52s\n",
      "10:\tlearn: 0.7997457\ttotal: 2.52s\tremaining: 1m 51s\n",
      "11:\tlearn: 0.8007218\ttotal: 2.73s\tremaining: 1m 51s\n",
      "12:\tlearn: 0.8023962\ttotal: 2.95s\tremaining: 1m 50s\n",
      "13:\tlearn: 0.8055635\ttotal: 3.16s\tremaining: 1m 49s\n",
      "14:\tlearn: 0.8078594\ttotal: 3.37s\tremaining: 1m 49s\n",
      "15:\tlearn: 0.8099798\ttotal: 3.59s\tremaining: 1m 48s\n",
      "16:\tlearn: 0.8130909\ttotal: 3.81s\tremaining: 1m 48s\n",
      "17:\tlearn: 0.8141098\ttotal: 4.03s\tremaining: 1m 47s\n",
      "18:\tlearn: 0.8166868\ttotal: 4.24s\tremaining: 1m 47s\n",
      "19:\tlearn: 0.8182458\ttotal: 4.47s\tremaining: 1m 47s\n",
      "20:\tlearn: 0.8213281\ttotal: 4.7s\tremaining: 1m 47s\n",
      "21:\tlearn: 0.8218482\ttotal: 4.91s\tremaining: 1m 46s\n",
      "22:\tlearn: 0.8229423\ttotal: 5.14s\tremaining: 1m 46s\n",
      "23:\tlearn: 0.8244281\ttotal: 5.36s\tremaining: 1m 46s\n",
      "24:\tlearn: 0.8255398\ttotal: 5.59s\tremaining: 1m 46s\n",
      "25:\tlearn: 0.8269363\ttotal: 5.81s\tremaining: 1m 45s\n",
      "26:\tlearn: 0.8290947\ttotal: 6.03s\tremaining: 1m 45s\n",
      "27:\tlearn: 0.8309146\ttotal: 6.24s\tremaining: 1m 45s\n",
      "28:\tlearn: 0.8314197\ttotal: 6.46s\tremaining: 1m 44s\n",
      "29:\tlearn: 0.8321935\ttotal: 6.68s\tremaining: 1m 44s\n",
      "30:\tlearn: 0.8335050\ttotal: 6.9s\tremaining: 1m 44s\n",
      "31:\tlearn: 0.8343550\ttotal: 7.13s\tremaining: 1m 44s\n",
      "32:\tlearn: 0.8355195\ttotal: 7.35s\tremaining: 1m 44s\n",
      "33:\tlearn: 0.8359779\ttotal: 7.58s\tremaining: 1m 43s\n",
      "34:\tlearn: 0.8370656\ttotal: 7.81s\tremaining: 1m 43s\n",
      "35:\tlearn: 0.8385291\ttotal: 8.03s\tremaining: 1m 43s\n",
      "36:\tlearn: 0.8393967\ttotal: 8.26s\tremaining: 1m 43s\n",
      "37:\tlearn: 0.8397839\ttotal: 8.48s\tremaining: 1m 43s\n",
      "38:\tlearn: 0.8410749\ttotal: 8.71s\tremaining: 1m 43s\n",
      "39:\tlearn: 0.8416752\ttotal: 8.93s\tremaining: 1m 42s\n",
      "40:\tlearn: 0.8421349\ttotal: 9.16s\tremaining: 1m 42s\n",
      "41:\tlearn: 0.8427767\ttotal: 9.38s\tremaining: 1m 42s\n",
      "42:\tlearn: 0.8435035\ttotal: 9.59s\tremaining: 1m 41s\n",
      "43:\tlearn: 0.8442807\ttotal: 9.81s\tremaining: 1m 41s\n",
      "44:\tlearn: 0.8453362\ttotal: 10s\tremaining: 1m 41s\n",
      "45:\tlearn: 0.8460123\ttotal: 10.2s\tremaining: 1m 41s\n",
      "46:\tlearn: 0.8465721\ttotal: 10.5s\tremaining: 1m 40s\n",
      "47:\tlearn: 0.8471672\ttotal: 10.7s\tremaining: 1m 40s\n",
      "48:\tlearn: 0.8477046\ttotal: 10.9s\tremaining: 1m 40s\n",
      "49:\tlearn: 0.8480280\ttotal: 11.1s\tremaining: 1m 40s\n",
      "50:\tlearn: 0.8490454\ttotal: 11.3s\tremaining: 1m 39s\n",
      "51:\tlearn: 0.8495632\ttotal: 11.6s\tremaining: 1m 39s\n",
      "52:\tlearn: 0.8500365\ttotal: 11.8s\tremaining: 1m 39s\n",
      "53:\tlearn: 0.8506847\ttotal: 12s\tremaining: 1m 39s\n",
      "54:\tlearn: 0.8512730\ttotal: 12.2s\tremaining: 1m 38s\n",
      "55:\tlearn: 0.8517536\ttotal: 12.5s\tremaining: 1m 38s\n",
      "56:\tlearn: 0.8523869\ttotal: 12.7s\tremaining: 1m 38s\n",
      "57:\tlearn: 0.8525356\ttotal: 12.9s\tremaining: 1m 38s\n",
      "58:\tlearn: 0.8533292\ttotal: 13.1s\tremaining: 1m 38s\n",
      "59:\tlearn: 0.8536445\ttotal: 13.4s\tremaining: 1m 37s\n",
      "60:\tlearn: 0.8542258\ttotal: 13.6s\tremaining: 1m 37s\n",
      "61:\tlearn: 0.8545038\ttotal: 13.8s\tremaining: 1m 37s\n",
      "62:\tlearn: 0.8551519\ttotal: 14s\tremaining: 1m 37s\n",
      "63:\tlearn: 0.8554839\ttotal: 14.2s\tremaining: 1m 36s\n",
      "64:\tlearn: 0.8559260\ttotal: 14.4s\tremaining: 1m 36s\n",
      "65:\tlearn: 0.8564174\ttotal: 14.7s\tremaining: 1m 36s\n",
      "66:\tlearn: 0.8567224\ttotal: 14.9s\tremaining: 1m 36s\n",
      "67:\tlearn: 0.8572276\ttotal: 15.1s\tremaining: 1m 35s\n",
      "68:\tlearn: 0.8576048\ttotal: 15.3s\tremaining: 1m 35s\n",
      "69:\tlearn: 0.8576221\ttotal: 15.5s\tremaining: 1m 35s\n",
      "70:\tlearn: 0.8579920\ttotal: 15.8s\tremaining: 1m 35s\n",
      "71:\tlearn: 0.8584034\ttotal: 16s\tremaining: 1m 34s\n",
      "72:\tlearn: 0.8587385\ttotal: 16.2s\tremaining: 1m 34s\n",
      "73:\tlearn: 0.8587438\ttotal: 16.4s\tremaining: 1m 34s\n",
      "74:\tlearn: 0.8592830\ttotal: 16.6s\tremaining: 1m 34s\n",
      "75:\tlearn: 0.8596444\ttotal: 16.9s\tremaining: 1m 34s\n",
      "76:\tlearn: 0.8599929\ttotal: 17.1s\tremaining: 1m 33s\n",
      "77:\tlearn: 0.8602862\ttotal: 17.3s\tremaining: 1m 33s\n",
      "78:\tlearn: 0.8604912\ttotal: 17.5s\tremaining: 1m 33s\n",
      "79:\tlearn: 0.8607729\ttotal: 17.7s\tremaining: 1m 33s\n",
      "80:\tlearn: 0.8612297\ttotal: 18s\tremaining: 1m 32s\n",
      "81:\tlearn: 0.8613750\ttotal: 18.2s\tremaining: 1m 32s\n",
      "82:\tlearn: 0.8617146\ttotal: 18.4s\tremaining: 1m 32s\n",
      "83:\tlearn: 0.8620444\ttotal: 18.6s\tremaining: 1m 32s\n",
      "84:\tlearn: 0.8624402\ttotal: 18.8s\tremaining: 1m 32s\n",
      "85:\tlearn: 0.8628609\ttotal: 19.1s\tremaining: 1m 31s\n",
      "86:\tlearn: 0.8633097\ttotal: 19.3s\tremaining: 1m 31s\n",
      "87:\tlearn: 0.8636598\ttotal: 19.5s\tremaining: 1m 31s\n",
      "88:\tlearn: 0.8638568\ttotal: 19.7s\tremaining: 1m 31s\n",
      "89:\tlearn: 0.8641949\ttotal: 19.9s\tremaining: 1m 30s\n",
      "90:\tlearn: 0.8645775\ttotal: 20.2s\tremaining: 1m 30s\n",
      "91:\tlearn: 0.8647248\ttotal: 20.4s\tremaining: 1m 30s\n",
      "92:\tlearn: 0.8649196\ttotal: 20.6s\tremaining: 1m 30s\n",
      "93:\tlearn: 0.8652050\ttotal: 20.8s\tremaining: 1m 30s\n",
      "94:\tlearn: 0.8655357\ttotal: 21.1s\tremaining: 1m 29s\n",
      "95:\tlearn: 0.8658540\ttotal: 21.3s\tremaining: 1m 29s\n",
      "96:\tlearn: 0.8662082\ttotal: 21.5s\tremaining: 1m 29s\n",
      "97:\tlearn: 0.8665516\ttotal: 21.7s\tremaining: 1m 29s\n",
      "98:\tlearn: 0.8667465\ttotal: 21.9s\tremaining: 1m 28s\n",
      "99:\tlearn: 0.8670736\ttotal: 22.2s\tremaining: 1m 28s\n",
      "100:\tlearn: 0.8672047\ttotal: 22.4s\tremaining: 1m 28s\n",
      "101:\tlearn: 0.8675552\ttotal: 22.6s\tremaining: 1m 28s\n",
      "102:\tlearn: 0.8676441\ttotal: 22.8s\tremaining: 1m 28s\n",
      "103:\tlearn: 0.8679263\ttotal: 23.1s\tremaining: 1m 27s\n",
      "104:\tlearn: 0.8683234\ttotal: 23.3s\tremaining: 1m 27s\n",
      "105:\tlearn: 0.8686188\ttotal: 23.5s\tremaining: 1m 27s\n",
      "106:\tlearn: 0.8687420\ttotal: 23.7s\tremaining: 1m 27s\n",
      "107:\tlearn: 0.8691062\ttotal: 23.9s\tremaining: 1m 26s\n",
      "108:\tlearn: 0.8693045\ttotal: 24.1s\tremaining: 1m 26s\n",
      "109:\tlearn: 0.8692982\ttotal: 24.4s\tremaining: 1m 26s\n",
      "110:\tlearn: 0.8694526\ttotal: 24.6s\tremaining: 1m 26s\n",
      "111:\tlearn: 0.8696330\ttotal: 24.8s\tremaining: 1m 25s\n",
      "112:\tlearn: 0.8699665\ttotal: 25s\tremaining: 1m 25s\n",
      "113:\tlearn: 0.8702550\ttotal: 25.3s\tremaining: 1m 25s\n",
      "114:\tlearn: 0.8702841\ttotal: 25.5s\tremaining: 1m 25s\n",
      "115:\tlearn: 0.8704236\ttotal: 25.7s\tremaining: 1m 25s\n",
      "116:\tlearn: 0.8706103\ttotal: 25.9s\tremaining: 1m 24s\n",
      "117:\tlearn: 0.8707341\ttotal: 26.2s\tremaining: 1m 24s\n",
      "118:\tlearn: 0.8709497\ttotal: 26.4s\tremaining: 1m 24s\n",
      "119:\tlearn: 0.8711305\ttotal: 26.6s\tremaining: 1m 24s\n",
      "120:\tlearn: 0.8715483\ttotal: 26.8s\tremaining: 1m 24s\n",
      "121:\tlearn: 0.8715886\ttotal: 27s\tremaining: 1m 23s\n",
      "122:\tlearn: 0.8718827\ttotal: 27.3s\tremaining: 1m 23s\n",
      "123:\tlearn: 0.8720779\ttotal: 27.5s\tremaining: 1m 23s\n",
      "124:\tlearn: 0.8722793\ttotal: 27.7s\tremaining: 1m 23s\n",
      "125:\tlearn: 0.8725250\ttotal: 27.9s\tremaining: 1m 22s\n",
      "126:\tlearn: 0.8725447\ttotal: 28.1s\tremaining: 1m 22s\n",
      "127:\tlearn: 0.8727656\ttotal: 28.4s\tremaining: 1m 22s\n",
      "128:\tlearn: 0.8729219\ttotal: 28.6s\tremaining: 1m 22s\n",
      "129:\tlearn: 0.8730999\ttotal: 28.9s\tremaining: 1m 22s\n",
      "130:\tlearn: 0.8732847\ttotal: 29.1s\tremaining: 1m 21s\n",
      "131:\tlearn: 0.8732656\ttotal: 29.3s\tremaining: 1m 21s\n",
      "132:\tlearn: 0.8733472\ttotal: 29.5s\tremaining: 1m 21s\n",
      "133:\tlearn: 0.8735646\ttotal: 29.8s\tremaining: 1m 21s\n",
      "134:\tlearn: 0.8736091\ttotal: 30s\tremaining: 1m 21s\n",
      "135:\tlearn: 0.8737328\ttotal: 30.2s\tremaining: 1m 20s\n",
      "136:\tlearn: 0.8739325\ttotal: 30.4s\tremaining: 1m 20s\n",
      "137:\tlearn: 0.8741935\ttotal: 30.6s\tremaining: 1m 20s\n",
      "138:\tlearn: 0.8743617\ttotal: 30.9s\tremaining: 1m 20s\n",
      "139:\tlearn: 0.8747147\ttotal: 31.1s\tremaining: 1m 19s\n",
      "140:\tlearn: 0.8748521\ttotal: 31.3s\tremaining: 1m 19s\n",
      "141:\tlearn: 0.8749575\ttotal: 31.5s\tremaining: 1m 19s\n",
      "142:\tlearn: 0.8751214\ttotal: 31.7s\tremaining: 1m 19s\n",
      "143:\tlearn: 0.8753296\ttotal: 32s\tremaining: 1m 19s\n",
      "144:\tlearn: 0.8755926\ttotal: 32.2s\tremaining: 1m 18s\n",
      "145:\tlearn: 0.8757511\ttotal: 32.4s\tremaining: 1m 18s\n",
      "146:\tlearn: 0.8760051\ttotal: 32.6s\tremaining: 1m 18s\n",
      "147:\tlearn: 0.8761057\ttotal: 32.9s\tremaining: 1m 18s\n",
      "148:\tlearn: 0.8761927\ttotal: 33.1s\tremaining: 1m 17s\n",
      "149:\tlearn: 0.8765670\ttotal: 33.3s\tremaining: 1m 17s\n",
      "150:\tlearn: 0.8767154\ttotal: 33.5s\tremaining: 1m 17s\n",
      "151:\tlearn: 0.8768095\ttotal: 33.8s\tremaining: 1m 17s\n",
      "152:\tlearn: 0.8768569\ttotal: 34s\tremaining: 1m 17s\n",
      "153:\tlearn: 0.8769418\ttotal: 34.2s\tremaining: 1m 16s\n",
      "154:\tlearn: 0.8770153\ttotal: 34.4s\tremaining: 1m 16s\n",
      "155:\tlearn: 0.8771084\ttotal: 34.7s\tremaining: 1m 16s\n",
      "156:\tlearn: 0.8772596\ttotal: 34.9s\tremaining: 1m 16s\n",
      "157:\tlearn: 0.8776568\ttotal: 35.1s\tremaining: 1m 15s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "158:\tlearn: 0.8777486\ttotal: 35.3s\tremaining: 1m 15s\n",
      "159:\tlearn: 0.8779493\ttotal: 35.6s\tremaining: 1m 15s\n",
      "160:\tlearn: 0.8781573\ttotal: 35.8s\tremaining: 1m 15s\n",
      "161:\tlearn: 0.8786412\ttotal: 36s\tremaining: 1m 15s\n",
      "162:\tlearn: 0.8790218\ttotal: 36.2s\tremaining: 1m 14s\n",
      "163:\tlearn: 0.8791232\ttotal: 36.4s\tremaining: 1m 14s\n",
      "164:\tlearn: 0.8792429\ttotal: 36.7s\tremaining: 1m 14s\n",
      "165:\tlearn: 0.8793304\ttotal: 36.9s\tremaining: 1m 14s\n",
      "166:\tlearn: 0.8795430\ttotal: 37.1s\tremaining: 1m 14s\n",
      "167:\tlearn: 0.8797472\ttotal: 37.3s\tremaining: 1m 13s\n",
      "168:\tlearn: 0.8799198\ttotal: 37.6s\tremaining: 1m 13s\n",
      "169:\tlearn: 0.8800179\ttotal: 37.8s\tremaining: 1m 13s\n",
      "170:\tlearn: 0.8802925\ttotal: 38s\tremaining: 1m 13s\n",
      "171:\tlearn: 0.8803812\ttotal: 38.2s\tremaining: 1m 12s\n",
      "172:\tlearn: 0.8805503\ttotal: 38.4s\tremaining: 1m 12s\n",
      "173:\tlearn: 0.8807658\ttotal: 38.7s\tremaining: 1m 12s\n",
      "174:\tlearn: 0.8809480\ttotal: 38.9s\tremaining: 1m 12s\n",
      "175:\tlearn: 0.8810256\ttotal: 39.1s\tremaining: 1m 11s\n",
      "176:\tlearn: 0.8812606\ttotal: 39.3s\tremaining: 1m 11s\n",
      "177:\tlearn: 0.8812850\ttotal: 39.5s\tremaining: 1m 11s\n",
      "178:\tlearn: 0.8813168\ttotal: 39.8s\tremaining: 1m 11s\n",
      "179:\tlearn: 0.8814915\ttotal: 40s\tremaining: 1m 11s\n",
      "180:\tlearn: 0.8816822\ttotal: 40.2s\tremaining: 1m 10s\n",
      "181:\tlearn: 0.8820009\ttotal: 40.5s\tremaining: 1m 10s\n",
      "182:\tlearn: 0.8821010\ttotal: 40.7s\tremaining: 1m 10s\n",
      "183:\tlearn: 0.8821307\ttotal: 40.9s\tremaining: 1m 10s\n",
      "184:\tlearn: 0.8822915\ttotal: 41.1s\tremaining: 1m 10s\n",
      "185:\tlearn: 0.8825141\ttotal: 41.4s\tremaining: 1m 9s\n",
      "186:\tlearn: 0.8827631\ttotal: 41.6s\tremaining: 1m 9s\n",
      "187:\tlearn: 0.8828680\ttotal: 41.8s\tremaining: 1m 9s\n",
      "188:\tlearn: 0.8832234\ttotal: 42s\tremaining: 1m 9s\n",
      "189:\tlearn: 0.8834607\ttotal: 42.2s\tremaining: 1m 8s\n",
      "190:\tlearn: 0.8835358\ttotal: 42.5s\tremaining: 1m 8s\n",
      "191:\tlearn: 0.8836342\ttotal: 42.7s\tremaining: 1m 8s\n",
      "192:\tlearn: 0.8838949\ttotal: 42.9s\tremaining: 1m 8s\n",
      "193:\tlearn: 0.8842637\ttotal: 43.1s\tremaining: 1m 8s\n",
      "194:\tlearn: 0.8843774\ttotal: 43.4s\tremaining: 1m 7s\n",
      "195:\tlearn: 0.8844397\ttotal: 43.6s\tremaining: 1m 7s\n",
      "196:\tlearn: 0.8846282\ttotal: 43.8s\tremaining: 1m 7s\n",
      "197:\tlearn: 0.8848227\ttotal: 44s\tremaining: 1m 7s\n",
      "198:\tlearn: 0.8849998\ttotal: 44.2s\tremaining: 1m 6s\n",
      "199:\tlearn: 0.8851070\ttotal: 44.5s\tremaining: 1m 6s\n",
      "200:\tlearn: 0.8852080\ttotal: 44.7s\tremaining: 1m 6s\n",
      "201:\tlearn: 0.8854285\ttotal: 44.9s\tremaining: 1m 6s\n",
      "202:\tlearn: 0.8856027\ttotal: 45.1s\tremaining: 1m 6s\n",
      "203:\tlearn: 0.8857141\ttotal: 45.4s\tremaining: 1m 5s\n",
      "204:\tlearn: 0.8859693\ttotal: 45.6s\tremaining: 1m 5s\n",
      "205:\tlearn: 0.8860330\ttotal: 45.8s\tremaining: 1m 5s\n",
      "206:\tlearn: 0.8860944\ttotal: 46s\tremaining: 1m 5s\n",
      "207:\tlearn: 0.8862839\ttotal: 46.3s\tremaining: 1m 4s\n",
      "208:\tlearn: 0.8864917\ttotal: 46.5s\tremaining: 1m 4s\n",
      "209:\tlearn: 0.8865542\ttotal: 46.7s\tremaining: 1m 4s\n",
      "210:\tlearn: 0.8870395\ttotal: 46.9s\tremaining: 1m 4s\n",
      "211:\tlearn: 0.8870278\ttotal: 47.2s\tremaining: 1m 4s\n",
      "212:\tlearn: 0.8871434\ttotal: 47.4s\tremaining: 1m 3s\n",
      "213:\tlearn: 0.8873275\ttotal: 47.6s\tremaining: 1m 3s\n",
      "214:\tlearn: 0.8874567\ttotal: 47.9s\tremaining: 1m 3s\n",
      "215:\tlearn: 0.8877612\ttotal: 48.1s\tremaining: 1m 3s\n",
      "216:\tlearn: 0.8879304\ttotal: 48.3s\tremaining: 1m 3s\n",
      "217:\tlearn: 0.8881085\ttotal: 48.5s\tremaining: 1m 2s\n",
      "218:\tlearn: 0.8882041\ttotal: 48.8s\tremaining: 1m 2s\n",
      "219:\tlearn: 0.8882593\ttotal: 49s\tremaining: 1m 2s\n",
      "220:\tlearn: 0.8883938\ttotal: 49.2s\tremaining: 1m 2s\n",
      "221:\tlearn: 0.8884284\ttotal: 49.4s\tremaining: 1m 1s\n",
      "222:\tlearn: 0.8885865\ttotal: 49.7s\tremaining: 1m 1s\n",
      "223:\tlearn: 0.8888779\ttotal: 49.9s\tremaining: 1m 1s\n",
      "224:\tlearn: 0.8890479\ttotal: 50.1s\tremaining: 1m 1s\n",
      "225:\tlearn: 0.8891455\ttotal: 50.4s\tremaining: 1m 1s\n",
      "226:\tlearn: 0.8892295\ttotal: 50.6s\tremaining: 1m\n",
      "227:\tlearn: 0.8894970\ttotal: 50.8s\tremaining: 1m\n",
      "228:\tlearn: 0.8895258\ttotal: 51s\tremaining: 1m\n",
      "229:\tlearn: 0.8897482\ttotal: 51.3s\tremaining: 1m\n",
      "230:\tlearn: 0.8898310\ttotal: 51.5s\tremaining: 59.9s\n",
      "231:\tlearn: 0.8899243\ttotal: 51.7s\tremaining: 59.7s\n",
      "232:\tlearn: 0.8900982\ttotal: 51.9s\tremaining: 59.5s\n",
      "233:\tlearn: 0.8902559\ttotal: 52.1s\tremaining: 59.3s\n",
      "234:\tlearn: 0.8905946\ttotal: 52.4s\tremaining: 59.1s\n",
      "235:\tlearn: 0.8908584\ttotal: 52.6s\tremaining: 58.8s\n",
      "236:\tlearn: 0.8910274\ttotal: 52.8s\tremaining: 58.6s\n",
      "237:\tlearn: 0.8912182\ttotal: 53s\tremaining: 58.4s\n",
      "238:\tlearn: 0.8913909\ttotal: 53.3s\tremaining: 58.2s\n",
      "239:\tlearn: 0.8915984\ttotal: 53.5s\tremaining: 58s\n",
      "240:\tlearn: 0.8917550\ttotal: 53.7s\tremaining: 57.7s\n",
      "241:\tlearn: 0.8918784\ttotal: 54s\tremaining: 57.5s\n",
      "242:\tlearn: 0.8920619\ttotal: 54.2s\tremaining: 57.3s\n",
      "243:\tlearn: 0.8923469\ttotal: 54.4s\tremaining: 57.1s\n",
      "244:\tlearn: 0.8924386\ttotal: 54.6s\tremaining: 56.8s\n",
      "245:\tlearn: 0.8924765\ttotal: 54.8s\tremaining: 56.6s\n",
      "246:\tlearn: 0.8927169\ttotal: 55.1s\tremaining: 56.4s\n",
      "247:\tlearn: 0.8929686\ttotal: 55.3s\tremaining: 56.2s\n",
      "248:\tlearn: 0.8930199\ttotal: 55.5s\tremaining: 56s\n",
      "249:\tlearn: 0.8930872\ttotal: 55.8s\tremaining: 55.8s\n",
      "250:\tlearn: 0.8932166\ttotal: 56s\tremaining: 55.5s\n",
      "251:\tlearn: 0.8933019\ttotal: 56.2s\tremaining: 55.3s\n",
      "252:\tlearn: 0.8936929\ttotal: 56.4s\tremaining: 55.1s\n",
      "253:\tlearn: 0.8938613\ttotal: 56.7s\tremaining: 54.9s\n",
      "254:\tlearn: 0.8940213\ttotal: 56.9s\tremaining: 54.7s\n",
      "255:\tlearn: 0.8941571\ttotal: 57.2s\tremaining: 54.5s\n",
      "256:\tlearn: 0.8944013\ttotal: 57.4s\tremaining: 54.3s\n",
      "257:\tlearn: 0.8944917\ttotal: 57.6s\tremaining: 54s\n",
      "258:\tlearn: 0.8945483\ttotal: 57.8s\tremaining: 53.8s\n",
      "259:\tlearn: 0.8946740\ttotal: 58.1s\tremaining: 53.6s\n",
      "260:\tlearn: 0.8949700\ttotal: 58.3s\tremaining: 53.4s\n",
      "261:\tlearn: 0.8950946\ttotal: 58.5s\tremaining: 53.1s\n",
      "262:\tlearn: 0.8953350\ttotal: 58.7s\tremaining: 52.9s\n",
      "263:\tlearn: 0.8954217\ttotal: 59s\tremaining: 52.7s\n",
      "264:\tlearn: 0.8955266\ttotal: 59.2s\tremaining: 52.5s\n",
      "265:\tlearn: 0.8956732\ttotal: 59.5s\tremaining: 52.3s\n",
      "266:\tlearn: 0.8958187\ttotal: 59.7s\tremaining: 52.1s\n",
      "267:\tlearn: 0.8958980\ttotal: 59.9s\tremaining: 51.9s\n",
      "268:\tlearn: 0.8959565\ttotal: 1m\tremaining: 51.7s\n",
      "269:\tlearn: 0.8961742\ttotal: 1m\tremaining: 51.5s\n",
      "270:\tlearn: 0.8963987\ttotal: 1m\tremaining: 51.3s\n",
      "271:\tlearn: 0.8965777\ttotal: 1m\tremaining: 51.1s\n",
      "272:\tlearn: 0.8967195\ttotal: 1m 1s\tremaining: 50.8s\n",
      "273:\tlearn: 0.8968707\ttotal: 1m 1s\tremaining: 50.6s\n",
      "274:\tlearn: 0.8967891\ttotal: 1m 1s\tremaining: 50.4s\n",
      "275:\tlearn: 0.8969789\ttotal: 1m 1s\tremaining: 50.2s\n",
      "276:\tlearn: 0.8971181\ttotal: 1m 2s\tremaining: 50s\n",
      "277:\tlearn: 0.8973945\ttotal: 1m 2s\tremaining: 49.8s\n",
      "278:\tlearn: 0.8975907\ttotal: 1m 2s\tremaining: 49.6s\n",
      "279:\tlearn: 0.8976753\ttotal: 1m 2s\tremaining: 49.4s\n",
      "280:\tlearn: 0.8977982\ttotal: 1m 3s\tremaining: 49.1s\n",
      "281:\tlearn: 0.8979763\ttotal: 1m 3s\tremaining: 48.9s\n",
      "282:\tlearn: 0.8979935\ttotal: 1m 3s\tremaining: 48.7s\n",
      "283:\tlearn: 0.8981728\ttotal: 1m 3s\tremaining: 48.5s\n",
      "284:\tlearn: 0.8983852\ttotal: 1m 3s\tremaining: 48.3s\n",
      "285:\tlearn: 0.8983881\ttotal: 1m 4s\tremaining: 48s\n",
      "286:\tlearn: 0.8984859\ttotal: 1m 4s\tremaining: 47.8s\n",
      "287:\tlearn: 0.8985157\ttotal: 1m 4s\tremaining: 47.6s\n",
      "288:\tlearn: 0.8985971\ttotal: 1m 4s\tremaining: 47.4s\n",
      "289:\tlearn: 0.8987997\ttotal: 1m 5s\tremaining: 47.2s\n",
      "290:\tlearn: 0.8988443\ttotal: 1m 5s\tremaining: 47s\n",
      "291:\tlearn: 0.8989441\ttotal: 1m 5s\tremaining: 46.7s\n",
      "292:\tlearn: 0.8990374\ttotal: 1m 5s\tremaining: 46.5s\n",
      "293:\tlearn: 0.8992438\ttotal: 1m 6s\tremaining: 46.3s\n",
      "294:\tlearn: 0.8993296\ttotal: 1m 6s\tremaining: 46.1s\n",
      "295:\tlearn: 0.8995163\ttotal: 1m 6s\tremaining: 45.8s\n",
      "296:\tlearn: 0.8995663\ttotal: 1m 6s\tremaining: 45.6s\n",
      "297:\tlearn: 0.8996329\ttotal: 1m 7s\tremaining: 45.4s\n",
      "298:\tlearn: 0.8997279\ttotal: 1m 7s\tremaining: 45.2s\n",
      "299:\tlearn: 0.9000583\ttotal: 1m 7s\tremaining: 45s\n",
      "300:\tlearn: 0.9001018\ttotal: 1m 7s\tremaining: 44.8s\n",
      "301:\tlearn: 0.9002076\ttotal: 1m 7s\tremaining: 44.5s\n",
      "302:\tlearn: 0.9002589\ttotal: 1m 8s\tremaining: 44.3s\n",
      "303:\tlearn: 0.9004740\ttotal: 1m 8s\tremaining: 44.1s\n",
      "304:\tlearn: 0.9006869\ttotal: 1m 8s\tremaining: 43.9s\n",
      "305:\tlearn: 0.9006506\ttotal: 1m 8s\tremaining: 43.7s\n",
      "306:\tlearn: 0.9007619\ttotal: 1m 9s\tremaining: 43.4s\n",
      "307:\tlearn: 0.9010332\ttotal: 1m 9s\tremaining: 43.2s\n",
      "308:\tlearn: 0.9011932\ttotal: 1m 9s\tremaining: 43s\n",
      "309:\tlearn: 0.9014664\ttotal: 1m 9s\tremaining: 42.8s\n",
      "310:\tlearn: 0.9015380\ttotal: 1m 9s\tremaining: 42.5s\n",
      "311:\tlearn: 0.9016280\ttotal: 1m 10s\tremaining: 42.3s\n",
      "312:\tlearn: 0.9016784\ttotal: 1m 10s\tremaining: 42.1s\n",
      "313:\tlearn: 0.9017864\ttotal: 1m 10s\tremaining: 41.9s\n",
      "314:\tlearn: 0.9019672\ttotal: 1m 10s\tremaining: 41.6s\n",
      "315:\tlearn: 0.9021179\ttotal: 1m 11s\tremaining: 41.4s\n",
      "316:\tlearn: 0.9021485\ttotal: 1m 11s\tremaining: 41.2s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "317:\tlearn: 0.9022699\ttotal: 1m 11s\tremaining: 41s\n",
      "318:\tlearn: 0.9024117\ttotal: 1m 11s\tremaining: 40.7s\n",
      "319:\tlearn: 0.9026659\ttotal: 1m 12s\tremaining: 40.5s\n",
      "320:\tlearn: 0.9026896\ttotal: 1m 12s\tremaining: 40.3s\n",
      "321:\tlearn: 0.9028349\ttotal: 1m 12s\tremaining: 40.1s\n",
      "322:\tlearn: 0.9028989\ttotal: 1m 12s\tremaining: 39.9s\n",
      "323:\tlearn: 0.9030197\ttotal: 1m 12s\tremaining: 39.6s\n",
      "324:\tlearn: 0.9031010\ttotal: 1m 13s\tremaining: 39.4s\n",
      "325:\tlearn: 0.9031944\ttotal: 1m 13s\tremaining: 39.2s\n",
      "326:\tlearn: 0.9032969\ttotal: 1m 13s\tremaining: 39s\n",
      "327:\tlearn: 0.9034710\ttotal: 1m 13s\tremaining: 38.8s\n",
      "328:\tlearn: 0.9035692\ttotal: 1m 14s\tremaining: 38.5s\n",
      "329:\tlearn: 0.9037081\ttotal: 1m 14s\tremaining: 38.3s\n",
      "330:\tlearn: 0.9038618\ttotal: 1m 14s\tremaining: 38.1s\n",
      "331:\tlearn: 0.9039717\ttotal: 1m 14s\tremaining: 37.9s\n",
      "332:\tlearn: 0.9042107\ttotal: 1m 15s\tremaining: 37.6s\n",
      "333:\tlearn: 0.9043232\ttotal: 1m 15s\tremaining: 37.4s\n",
      "334:\tlearn: 0.9044839\ttotal: 1m 15s\tremaining: 37.2s\n",
      "335:\tlearn: 0.9046149\ttotal: 1m 15s\tremaining: 37s\n",
      "336:\tlearn: 0.9047408\ttotal: 1m 15s\tremaining: 36.8s\n",
      "337:\tlearn: 0.9047992\ttotal: 1m 16s\tremaining: 36.5s\n",
      "338:\tlearn: 0.9048812\ttotal: 1m 16s\tremaining: 36.3s\n",
      "339:\tlearn: 0.9051400\ttotal: 1m 16s\tremaining: 36.1s\n",
      "340:\tlearn: 0.9052657\ttotal: 1m 16s\tremaining: 35.9s\n",
      "341:\tlearn: 0.9053678\ttotal: 1m 17s\tremaining: 35.7s\n",
      "342:\tlearn: 0.9054635\ttotal: 1m 17s\tremaining: 35.5s\n",
      "343:\tlearn: 0.9056359\ttotal: 1m 17s\tremaining: 35.2s\n",
      "344:\tlearn: 0.9057625\ttotal: 1m 17s\tremaining: 35s\n",
      "345:\tlearn: 0.9058920\ttotal: 1m 18s\tremaining: 34.8s\n",
      "346:\tlearn: 0.9061538\ttotal: 1m 18s\tremaining: 34.6s\n",
      "347:\tlearn: 0.9063856\ttotal: 1m 18s\tremaining: 34.3s\n",
      "348:\tlearn: 0.9065724\ttotal: 1m 18s\tremaining: 34.1s\n",
      "349:\tlearn: 0.9067784\ttotal: 1m 19s\tremaining: 33.9s\n",
      "350:\tlearn: 0.9068570\ttotal: 1m 19s\tremaining: 33.7s\n",
      "351:\tlearn: 0.9070855\ttotal: 1m 19s\tremaining: 33.4s\n",
      "352:\tlearn: 0.9071225\ttotal: 1m 19s\tremaining: 33.2s\n",
      "353:\tlearn: 0.9074422\ttotal: 1m 19s\tremaining: 33s\n",
      "354:\tlearn: 0.9074857\ttotal: 1m 20s\tremaining: 32.7s\n",
      "355:\tlearn: 0.9076609\ttotal: 1m 20s\tremaining: 32.5s\n",
      "356:\tlearn: 0.9077574\ttotal: 1m 20s\tremaining: 32.3s\n",
      "357:\tlearn: 0.9078009\ttotal: 1m 20s\tremaining: 32.1s\n",
      "358:\tlearn: 0.9079515\ttotal: 1m 21s\tremaining: 31.8s\n",
      "359:\tlearn: 0.9080460\ttotal: 1m 21s\tremaining: 31.6s\n",
      "360:\tlearn: 0.9082061\ttotal: 1m 21s\tremaining: 31.4s\n",
      "361:\tlearn: 0.9083619\ttotal: 1m 21s\tremaining: 31.2s\n",
      "362:\tlearn: 0.9085114\ttotal: 1m 22s\tremaining: 30.9s\n",
      "363:\tlearn: 0.9086630\ttotal: 1m 22s\tremaining: 30.7s\n",
      "364:\tlearn: 0.9087710\ttotal: 1m 22s\tremaining: 30.5s\n",
      "365:\tlearn: 0.9090242\ttotal: 1m 22s\tremaining: 30.3s\n",
      "366:\tlearn: 0.9092190\ttotal: 1m 22s\tremaining: 30s\n",
      "367:\tlearn: 0.9094233\ttotal: 1m 23s\tremaining: 29.8s\n",
      "368:\tlearn: 0.9096064\ttotal: 1m 23s\tremaining: 29.6s\n",
      "369:\tlearn: 0.9098317\ttotal: 1m 23s\tremaining: 29.4s\n",
      "370:\tlearn: 0.9099491\ttotal: 1m 23s\tremaining: 29.1s\n",
      "371:\tlearn: 0.9100486\ttotal: 1m 24s\tremaining: 28.9s\n",
      "372:\tlearn: 0.9100835\ttotal: 1m 24s\tremaining: 28.7s\n",
      "373:\tlearn: 0.9102168\ttotal: 1m 24s\tremaining: 28.5s\n",
      "374:\tlearn: 0.9102834\ttotal: 1m 24s\tremaining: 28.2s\n",
      "375:\tlearn: 0.9103416\ttotal: 1m 24s\tremaining: 28s\n",
      "376:\tlearn: 0.9105148\ttotal: 1m 25s\tremaining: 27.8s\n",
      "377:\tlearn: 0.9106998\ttotal: 1m 25s\tremaining: 27.6s\n",
      "378:\tlearn: 0.9107822\ttotal: 1m 25s\tremaining: 27.3s\n",
      "379:\tlearn: 0.9108531\ttotal: 1m 25s\tremaining: 27.1s\n",
      "380:\tlearn: 0.9109154\ttotal: 1m 26s\tremaining: 26.9s\n",
      "381:\tlearn: 0.9109946\ttotal: 1m 26s\tremaining: 26.6s\n",
      "382:\tlearn: 0.9111542\ttotal: 1m 26s\tremaining: 26.4s\n",
      "383:\tlearn: 0.9111753\ttotal: 1m 26s\tremaining: 26.2s\n",
      "384:\tlearn: 0.9112798\ttotal: 1m 26s\tremaining: 26s\n",
      "385:\tlearn: 0.9113179\ttotal: 1m 27s\tremaining: 25.8s\n",
      "386:\tlearn: 0.9114911\ttotal: 1m 27s\tremaining: 25.5s\n",
      "387:\tlearn: 0.9116674\ttotal: 1m 27s\tremaining: 25.3s\n",
      "388:\tlearn: 0.9117803\ttotal: 1m 27s\tremaining: 25.1s\n",
      "389:\tlearn: 0.9118870\ttotal: 1m 28s\tremaining: 24.9s\n",
      "390:\tlearn: 0.9120462\ttotal: 1m 28s\tremaining: 24.6s\n",
      "391:\tlearn: 0.9120981\ttotal: 1m 28s\tremaining: 24.4s\n",
      "392:\tlearn: 0.9121700\ttotal: 1m 28s\tremaining: 24.2s\n",
      "393:\tlearn: 0.9123249\ttotal: 1m 29s\tremaining: 24s\n",
      "394:\tlearn: 0.9123787\ttotal: 1m 29s\tremaining: 23.8s\n",
      "395:\tlearn: 0.9124948\ttotal: 1m 29s\tremaining: 23.5s\n",
      "396:\tlearn: 0.9125443\ttotal: 1m 29s\tremaining: 23.3s\n",
      "397:\tlearn: 0.9125391\ttotal: 1m 30s\tremaining: 23.1s\n",
      "398:\tlearn: 0.9126583\ttotal: 1m 30s\tremaining: 22.9s\n",
      "399:\tlearn: 0.9127628\ttotal: 1m 30s\tremaining: 22.6s\n",
      "400:\tlearn: 0.9129314\ttotal: 1m 30s\tremaining: 22.4s\n",
      "401:\tlearn: 0.9131515\ttotal: 1m 31s\tremaining: 22.2s\n",
      "402:\tlearn: 0.9132632\ttotal: 1m 31s\tremaining: 22s\n",
      "403:\tlearn: 0.9132909\ttotal: 1m 31s\tremaining: 21.7s\n",
      "404:\tlearn: 0.9133507\ttotal: 1m 31s\tremaining: 21.5s\n",
      "405:\tlearn: 0.9135179\ttotal: 1m 31s\tremaining: 21.3s\n",
      "406:\tlearn: 0.9136536\ttotal: 1m 32s\tremaining: 21.1s\n",
      "407:\tlearn: 0.9136074\ttotal: 1m 32s\tremaining: 20.8s\n",
      "408:\tlearn: 0.9137400\ttotal: 1m 32s\tremaining: 20.6s\n",
      "409:\tlearn: 0.9139978\ttotal: 1m 32s\tremaining: 20.4s\n",
      "410:\tlearn: 0.9140865\ttotal: 1m 33s\tremaining: 20.2s\n",
      "411:\tlearn: 0.9140655\ttotal: 1m 33s\tremaining: 19.9s\n",
      "412:\tlearn: 0.9141359\ttotal: 1m 33s\tremaining: 19.7s\n",
      "413:\tlearn: 0.9141529\ttotal: 1m 33s\tremaining: 19.5s\n",
      "414:\tlearn: 0.9143338\ttotal: 1m 34s\tremaining: 19.3s\n",
      "415:\tlearn: 0.9145040\ttotal: 1m 34s\tremaining: 19s\n",
      "416:\tlearn: 0.9145723\ttotal: 1m 34s\tremaining: 18.8s\n",
      "417:\tlearn: 0.9145398\ttotal: 1m 34s\tremaining: 18.6s\n",
      "418:\tlearn: 0.9146609\ttotal: 1m 34s\tremaining: 18.4s\n",
      "419:\tlearn: 0.9147882\ttotal: 1m 35s\tremaining: 18.1s\n",
      "420:\tlearn: 0.9148923\ttotal: 1m 35s\tremaining: 17.9s\n",
      "421:\tlearn: 0.9148925\ttotal: 1m 35s\tremaining: 17.7s\n",
      "422:\tlearn: 0.9149524\ttotal: 1m 35s\tremaining: 17.5s\n",
      "423:\tlearn: 0.9150776\ttotal: 1m 36s\tremaining: 17.2s\n",
      "424:\tlearn: 0.9151942\ttotal: 1m 36s\tremaining: 17s\n",
      "425:\tlearn: 0.9152184\ttotal: 1m 36s\tremaining: 16.8s\n",
      "426:\tlearn: 0.9153236\ttotal: 1m 36s\tremaining: 16.6s\n",
      "427:\tlearn: 0.9154487\ttotal: 1m 37s\tremaining: 16.3s\n",
      "428:\tlearn: 0.9155138\ttotal: 1m 37s\tremaining: 16.1s\n",
      "429:\tlearn: 0.9155423\ttotal: 1m 37s\tremaining: 15.9s\n",
      "430:\tlearn: 0.9157050\ttotal: 1m 37s\tremaining: 15.7s\n",
      "431:\tlearn: 0.9158014\ttotal: 1m 38s\tremaining: 15.4s\n",
      "432:\tlearn: 0.9159516\ttotal: 1m 38s\tremaining: 15.2s\n",
      "433:\tlearn: 0.9160555\ttotal: 1m 38s\tremaining: 15s\n",
      "434:\tlearn: 0.9162210\ttotal: 1m 38s\tremaining: 14.7s\n",
      "435:\tlearn: 0.9162683\ttotal: 1m 38s\tremaining: 14.5s\n",
      "436:\tlearn: 0.9163388\ttotal: 1m 39s\tremaining: 14.3s\n",
      "437:\tlearn: 0.9164308\ttotal: 1m 39s\tremaining: 14.1s\n",
      "438:\tlearn: 0.9164823\ttotal: 1m 39s\tremaining: 13.8s\n",
      "439:\tlearn: 0.9165534\ttotal: 1m 39s\tremaining: 13.6s\n",
      "440:\tlearn: 0.9166754\ttotal: 1m 40s\tremaining: 13.4s\n",
      "441:\tlearn: 0.9167449\ttotal: 1m 40s\tremaining: 13.2s\n",
      "442:\tlearn: 0.9168560\ttotal: 1m 40s\tremaining: 12.9s\n",
      "443:\tlearn: 0.9169222\ttotal: 1m 40s\tremaining: 12.7s\n",
      "444:\tlearn: 0.9172409\ttotal: 1m 41s\tremaining: 12.5s\n",
      "445:\tlearn: 0.9173816\ttotal: 1m 41s\tremaining: 12.3s\n",
      "446:\tlearn: 0.9174905\ttotal: 1m 41s\tremaining: 12s\n",
      "447:\tlearn: 0.9175481\ttotal: 1m 41s\tremaining: 11.8s\n",
      "448:\tlearn: 0.9176038\ttotal: 1m 42s\tremaining: 11.6s\n",
      "449:\tlearn: 0.9176980\ttotal: 1m 42s\tremaining: 11.4s\n",
      "450:\tlearn: 0.9178851\ttotal: 1m 42s\tremaining: 11.1s\n",
      "451:\tlearn: 0.9182756\ttotal: 1m 42s\tremaining: 10.9s\n",
      "452:\tlearn: 0.9183801\ttotal: 1m 42s\tremaining: 10.7s\n",
      "453:\tlearn: 0.9186900\ttotal: 1m 43s\tremaining: 10.5s\n",
      "454:\tlearn: 0.9187747\ttotal: 1m 43s\tremaining: 10.2s\n",
      "455:\tlearn: 0.9187854\ttotal: 1m 43s\tremaining: 10s\n",
      "456:\tlearn: 0.9189235\ttotal: 1m 43s\tremaining: 9.77s\n",
      "457:\tlearn: 0.9190196\ttotal: 1m 44s\tremaining: 9.54s\n",
      "458:\tlearn: 0.9191357\ttotal: 1m 44s\tremaining: 9.32s\n",
      "459:\tlearn: 0.9192629\ttotal: 1m 44s\tremaining: 9.09s\n",
      "460:\tlearn: 0.9193526\ttotal: 1m 44s\tremaining: 8.86s\n",
      "461:\tlearn: 0.9193920\ttotal: 1m 45s\tremaining: 8.64s\n",
      "462:\tlearn: 0.9194397\ttotal: 1m 45s\tremaining: 8.41s\n",
      "463:\tlearn: 0.9196392\ttotal: 1m 45s\tremaining: 8.18s\n",
      "464:\tlearn: 0.9197028\ttotal: 1m 45s\tremaining: 7.96s\n",
      "465:\tlearn: 0.9197834\ttotal: 1m 45s\tremaining: 7.73s\n",
      "466:\tlearn: 0.9199847\ttotal: 1m 46s\tremaining: 7.5s\n",
      "467:\tlearn: 0.9200724\ttotal: 1m 46s\tremaining: 7.27s\n",
      "468:\tlearn: 0.9200828\ttotal: 1m 46s\tremaining: 7.05s\n",
      "469:\tlearn: 0.9201333\ttotal: 1m 46s\tremaining: 6.82s\n",
      "470:\tlearn: 0.9201775\ttotal: 1m 47s\tremaining: 6.59s\n",
      "471:\tlearn: 0.9203115\ttotal: 1m 47s\tremaining: 6.37s\n",
      "472:\tlearn: 0.9203521\ttotal: 1m 47s\tremaining: 6.14s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "473:\tlearn: 0.9205094\ttotal: 1m 47s\tremaining: 5.91s\n",
      "474:\tlearn: 0.9208767\ttotal: 1m 47s\tremaining: 5.68s\n",
      "475:\tlearn: 0.9210370\ttotal: 1m 48s\tremaining: 5.46s\n",
      "476:\tlearn: 0.9210245\ttotal: 1m 48s\tremaining: 5.23s\n",
      "477:\tlearn: 0.9210619\ttotal: 1m 48s\tremaining: 5s\n",
      "478:\tlearn: 0.9211406\ttotal: 1m 48s\tremaining: 4.78s\n",
      "479:\tlearn: 0.9213522\ttotal: 1m 49s\tremaining: 4.55s\n",
      "480:\tlearn: 0.9215474\ttotal: 1m 49s\tremaining: 4.32s\n",
      "481:\tlearn: 0.9216464\ttotal: 1m 49s\tremaining: 4.09s\n",
      "482:\tlearn: 0.9217568\ttotal: 1m 49s\tremaining: 3.87s\n",
      "483:\tlearn: 0.9217874\ttotal: 1m 50s\tremaining: 3.64s\n",
      "484:\tlearn: 0.9219497\ttotal: 1m 50s\tremaining: 3.41s\n",
      "485:\tlearn: 0.9219998\ttotal: 1m 50s\tremaining: 3.18s\n",
      "486:\tlearn: 0.9220988\ttotal: 1m 50s\tremaining: 2.96s\n",
      "487:\tlearn: 0.9222830\ttotal: 1m 50s\tremaining: 2.73s\n",
      "488:\tlearn: 0.9223837\ttotal: 1m 51s\tremaining: 2.5s\n",
      "489:\tlearn: 0.9224161\ttotal: 1m 51s\tremaining: 2.27s\n",
      "490:\tlearn: 0.9225523\ttotal: 1m 51s\tremaining: 2.05s\n",
      "491:\tlearn: 0.9225526\ttotal: 1m 51s\tremaining: 1.82s\n",
      "492:\tlearn: 0.9227780\ttotal: 1m 52s\tremaining: 1.59s\n",
      "493:\tlearn: 0.9230329\ttotal: 1m 52s\tremaining: 1.36s\n",
      "494:\tlearn: 0.9231608\ttotal: 1m 52s\tremaining: 1.14s\n",
      "495:\tlearn: 0.9233590\ttotal: 1m 52s\tremaining: 909ms\n",
      "496:\tlearn: 0.9234656\ttotal: 1m 52s\tremaining: 682ms\n",
      "497:\tlearn: 0.9236141\ttotal: 1m 53s\tremaining: 455ms\n",
      "498:\tlearn: 0.9237859\ttotal: 1m 53s\tremaining: 227ms\n",
      "499:\tlearn: 0.9240060\ttotal: 1m 53s\tremaining: 0us\n",
      "ROC-AUC на валидационном наборе данных: 0.7100309185550469\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import f1_score\n",
    "from catboost import CatBoostClassifier, Pool\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Разделение данных на тренировочный и валидационный наборы\n",
    "X_train, X_val, y_train, y_val = train_test_split(df.drop(['churn'], axis=1), df['churn'],\n",
    "                                                  test_size=0.2, random_state=42)\n",
    "\n",
    "# Создание и обучение модели CatBoost с учетом дисбаланса классов и использованием GPU\n",
    "model = CatBoostClassifier(iterations=500,\n",
    "                   learning_rate=0.1,\n",
    "                   depth=10,\n",
    "                   loss_function='Logloss',\n",
    "                   eval_metric='F1',  # Здесь меняем на F1\n",
    "                   random_seed=0,\n",
    "                   class_weights=[1, 10]\n",
    "#                            ,  # примерное соотношение классов\n",
    "#                    task_type='GPU'\n",
    "                          )\n",
    "\n",
    "# Обучение модели\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "# Получение предсказаний на валидационном наборе данных\n",
    "val_preds = model.predict(X_val)\n",
    "\n",
    "# Вычисление ROC-AUC на валидационном наборе данных\n",
    "f1_score = f1_score(y_val, val_preds)\n",
    "print(\"F1 на валидационном наборе данных:\", f1_score)\n",
    "\n",
    "# Отображение графика\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "78c95202",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "d931ffb6",
   "metadata": {},
   "outputs": [],
   "source": [
    "unique_values = np.unique(val_preds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "32d67b5d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1])"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "unique_valuesc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "c7194d2d",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = preprocessing.MinMaxScaler()\n",
    "X_train = scaler.fit_transform(X_train.values)\n",
    "X_val =  scaler.fit_transform(X_val.values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "61fbc374",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2870376, 36)"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a5885bb5",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
